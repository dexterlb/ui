# i3 config file (v4)
#
# Please see http://i3wm.org/docs/userguide.html for a complete reference!
#
# This config file uses keycodes (bindsym) and was written for the QWERTY
# layout.
#
# To get a config file with the same key positions, but for your current
# layout, use the i3-config-wizard
#

# super key
{% if session_mode == "remote" %}
set $mod Mod1
{% else %}
set $mod Mod4
{% endif %}

set $hostname {{ hostname }}

{% if hostname == "gallifrey" %}

# outputs
workspace 1    output DisplayPort-0
workspace 2    output DisplayPort-0
workspace 3    output DisplayPort-0
workspace 4    output DisplayPort-0
workspace 5    output DisplayPort-0
workspace 6    output DisplayPort-0
workspace 7    output DisplayPort-0
workspace 8    output DisplayPort-0
workspace 9    output DisplayPort-0
workspace 10   output DisplayPort-0
workspace f1   output DisplayPort-1
workspace f2   output DisplayPort-1
workspace f3   output DisplayPort-1
workspace f4   output DisplayPort-1
workspace f5   output DisplayPort-1
workspace f6   output DisplayPort-1
workspace f7   output DisplayPort-1
workspace f8   output DisplayPort-1
workspace f9   output DisplayPort-1
workspace f10  output DisplayPort-1
workspace f11  output DisplayPort-1
workspace f12  output DisplayPort-1

{% endif %}

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:Droid Sans Mono 0

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Colours
# class                 border                  backgr.           text              indicator               child_border
client.focused          {{ col_highlight }}     {{ col_main }}    #ffffff           {{ col_highlight2 }}    {{ col_main }}
client.focused_inactive {{ col_inactive }}      {{ col_dull }}    #ffffff           {{ col_inactive2 }}     {{ col_dull }}
client.unfocused        {{ col_inactive }}      {{ col_dead }}    #888888           {{ col_dull2 }}         {{ col_dead }}
client.urgent           {{ col_urgent_bg }}     {{ col_urgent }}  #ffffff           {{ col_urgent }}        {{ col_urgent }}
client.placeholder      #000000 #0c0c0c #ffffff #000000   #0c0c0c

client.background       #ffffff

gaps inner 4
gaps outer 4

# use these keys for focus, movement, and resize directions when reaching for
# the arrows is not convenient
set $up k
set $down j
set $left h
set $right l

# use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+c kill

# start dmenu (a program launcher)
# bindsym $mod+p exec dmenu_run
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+s split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+r layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+space layout toggle split

# toggle tiling / floating
bindsym $mod+t floating toggle

# change focus between tiling / floating windows
bindsym $mod+shift+Tab focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+d focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+s move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10
bindsym $mod+F1 workspace f1
bindsym $mod+F2 workspace f2
bindsym $mod+F3 workspace f3
bindsym $mod+F4 workspace f4
bindsym $mod+F5 workspace f5
bindsym $mod+F6 workspace f6
bindsym $mod+F7 workspace f7
bindsym $mod+F8 workspace f8
bindsym $mod+F9 workspace f9
bindsym $mod+F10 workspace f10
bindsym $mod+F11 workspace f11
bindsym $mod+F12 workspace f12

bindsym $mod+Mod1+1 nop do switch_current_display_workspace 1
bindsym $mod+Mod1+2 nop do switch_current_display_workspace 2
bindsym $mod+Mod1+3 nop do switch_current_display_workspace 3
bindsym $mod+Mod1+4 nop do switch_current_display_workspace 4
bindsym $mod+Mod1+5 nop do switch_current_display_workspace 5
bindsym $mod+Mod1+6 nop do switch_current_display_workspace 6
bindsym $mod+Mod1+7 nop do switch_current_display_workspace 7
bindsym $mod+Mod1+8 nop do switch_current_display_workspace 8
bindsym $mod+Mod1+9 nop do switch_current_display_workspace 9
bindsym $mod+Mod1+0 nop do switch_current_display_workspace 10
bindsym $mod+Mod1+F1 nop do switch_current_display_workspace f1
bindsym $mod+Mod1+F2 nop do switch_current_display_workspace f2
bindsym $mod+Mod1+F3 nop do switch_current_display_workspace f3
bindsym $mod+Mod1+F4 nop do switch_current_display_workspace f4
bindsym $mod+Mod1+F5 nop do switch_current_display_workspace f5
bindsym $mod+Mod1+F6 nop do switch_current_display_workspace f6
bindsym $mod+Mod1+F7 nop do switch_current_display_workspace f7
bindsym $mod+Mod1+F8 nop do switch_current_display_workspace f8
bindsym $mod+Mod1+F9 nop do switch_current_display_workspace f9
bindsym $mod+Mod1+F10 nop do switch_current_display_workspace f10
bindsym $mod+Mod1+F11 nop do switch_current_display_workspace f11
bindsym $mod+Mod1+F12 nop do switch_current_display_workspace f12

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10
bindsym $mod+Shift+F1 move container to workspace f1
bindsym $mod+Shift+F2 move container to workspace f2
bindsym $mod+Shift+F3 move container to workspace f3
bindsym $mod+Shift+F4 move container to workspace f4
bindsym $mod+Shift+F5 move container to workspace f5
bindsym $mod+Shift+F6 move container to workspace f6
bindsym $mod+Shift+F7 move container to workspace f7
bindsym $mod+Shift+F8 move container to workspace f8
bindsym $mod+Shift+F9 move container to workspace f9
bindsym $mod+Shift+F10 move container to workspace f10
bindsym $mod+Shift+F11 move container to workspace f11
bindsym $mod+Shift+F12 move container to workspace f12

bindsym $mod+Mod1+Left move workspace to output left
bindsym $mod+Mod1+Right move workspace to output right

bindsym $mod+Mod1+h move workspace to output left
bindsym $mod+Mod1+l move workspace to output right

# reload the configuration file
# bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+q restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym $left       resize shrink width 10 px or 10 ppt
        bindsym $down       resize grow height 10 px or 10 ppt
        bindsym $up         resize shrink height 10 px or 10 ppt
        bindsym $right      resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left        resize shrink width 10 px or 10 ppt
        bindsym Down        resize grow height 10 px or 10 ppt
        bindsym Up          resize shrink height 10 px or 10 ppt
        bindsym Right       resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+Shift+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

{% if i3_version == "i3" %}
    {% set col_bar_bg = col_bar_bg_solid %}
{% endif %}

bar {
      font pango:Droid Sans Mono, Font Awesome 12
      position top
      height 20
{% if i3_version == "i3_gaps" %}
      i3bar_command i3bar -t
{% endif %}
      status_command i3status-rs {{ ui_dir }}/i3/status.toml
      colors {
            separator #666666
            background {{ col_bar_bg }}
            statusline #dddddd
            focused_workspace {{ col_bar_bg }} {{ col_bar_bg }} {{ col_highlight_text }}
            active_workspace {{ col_bar_bg }} {{ col_bar_bg }} {{ col_highlight_text2 }}
            inactive_workspace {{ col_bar_bg }} {{ col_bar_bg }} {{ col_inactive_text }}
            urgent_workspace {{ col_urgent }} {{ col_urgent }} {{ col_urgent_text }}
      }
}

bindsym $mod+Control+p nop send music_pause
bindsym Pause nop send music_pause
bindsym $mod+Control+Escape nop send music_stop
bindsym $mod+Control+Right nop send music_next
bindsym $mod+Control+Left nop send music_previous
bindsym $mod+Control+Up nop send music_volume +1
bindsym $mod+Control+Down nop send music_volume -1
bindsym --release --whole-window $mod+Control+button5 nop send music_volume -1
bindsym --release --whole-window $mod+Control+button4 nop send music_volume +1
bindsym $mod+Control+period nop send music_home

bindsym $mod+Mod1+r exec {{ ui_dir }}/redshift_control.sh start
bindsym $mod+Mod1+b exec {{ ui_dir }}/redshift_control.sh stop

bindsym $mod+Mod1+minus   exec xbacklight -dec 4
bindsym $mod+Mod1+plus    exec xbacklight -inc 4
bindsym $mod+Shift+minus  exec xbacklight -dec 1
bindsym $mod+Shift+plus   exec xbacklight -inc 1

bindsym $mod+Mod1+n nop send notification_next

bindsym $mod+Escape exec {{ ui_dir }}/session_menu.sh

bindsym $mod+Control+d exec {{ ui_dir }}/theme_variant.sh dark
bindsym $mod+Control+l exec {{ ui_dir }}/theme_variant.sh light

bindsym --release Print exec {{ screenshooter }} full
bindsym --release Shift+Print exec {{ screenshooter }} region
bindsym --release Control+Print exec {{ screenshooter }} window
bindsym --release $mod+Control+y exec {{ screenshooter }} window
bindsym --release $mod+y exec {{ screenshooter }} full
bindsym --release $mod+Shift+y exec {{ screenshooter }} region
bindsym --release $mod+p exec {{ ui_dir }}/runmenu.sh run
bindsym --release $mod+Tab exec {{ ui_dir }}/runmenu.sh window
bindsym $mod+Print exec {{ screenshooter }}

bindsym --release $mod+Mod1+d exec {{ ui_dir }}/detect_displays.sh
bindsym --release $mod+Mod1+c exec {{ ui_dir }}/detect_displays.sh clone
bindsym --release $mod+Mod1+s exec {{ ui_dir }}/detect_displays.sh single

# bind scroll lock key to mute/unmute mic when not used in combination
bindcode --release 78 exec "{{ ui_dir }}/mic_mute.sh restrictive_toggle; pkill -SIGRTMIN+4 i3status"

# per-window configuration

assign [class="^Steam$"] 6
assign [class="^dota2$"] 6
assign [class="^explorer\.exe$"] 6
assign [class="^Firefox$"] 2
assign [class="^Hexchat$"] 3
assign [class="^Mumble$"] 3
assign [class="^telegram-desktop$"] 3


{% if i3_version == "sway" %}
    input 9610:30:HAILUCK_CO.,LTD_USB_KEYBOARD_Touchpad {
        tap enabled
    }
    output "*" background {{ wallpaper }} fill
    exec {{ ui_dir }}/startup_wayland.sh
{% else %}
    exec {{ ui_dir }}/startup.sh
{% endif %}
